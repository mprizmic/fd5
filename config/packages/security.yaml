security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
#            form_login:
                # submit the login form here
#                check_path: app_login
                # the user is redirected here when they need to log in
#                login_path: app_login
                # if true, forward the user to the login form instead of redirecting
#                use_forward: false
                # login success redirecting options (read further below)
#                always_use_default_target_path: true
#                default_target_path: portada
                # target_path_parameter: _target_path
#                use_referer: false
                # login failure redirecting options (read further below)
#                failure_path: app_login
                #failure_forward:               false
                #failure_path_parameter:        _failure_path
                #failure_handler:               some.service.id
                #success_handler:               some.service.id

                # field names for the username and password fields
    #                username_parameter:             _username
    #                password_parameter:             _password

                # csrf token options
                #csrf_parameter:                _csrf_token
                #csrf_token_id:                 authenticate
                #csrf_token_generator:          my.csrf_token_generator.id
    #                csrf_token_generator:           security.csrf.token_manager

                # by default, the login form *must* be a POST, not a GET
#                post_only: true
    #            remember_me:                    true

                # by default, a session must exist before submitting an authentication request
                # if false, then Request::hasPreviousSession is not called during authentication
#                require_previous_session: true
            logout:
                path: app_logout
                # where to redirect after logout
                target: portada
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: [ROLE_ADMIN, ROLE_SUPER_ADMIN] }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/default/portada, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/default/acerca_de, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/default, roles: ROLE_USER }
        - { path: ^/user/cambiar_password, roles: ROLE_USER }
        - { path: ^/user/datos_personales, roles: ROLE_USER }
        - { path: ^/user, roles: ROLE_SUPER_ADMIN}
        - { path: ^/establecimiento, roles: ROLE_SUPER_ADMIN}
        - { path: ^/backend, roles: ROLE_ADMIN}

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
